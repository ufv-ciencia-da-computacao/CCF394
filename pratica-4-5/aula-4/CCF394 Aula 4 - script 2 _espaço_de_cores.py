# -*- coding: utf-8 -*-
"""CCF394 Espaço de Cores.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RkOQF3fmlIn_uNh8bCAOjKZKOYohyXPJ
"""

import cv2 #import openCV2 package
import numpy as np #import numpy as short np 
# from google.colab.patches import cv2_imshow
from matplotlib import pyplot as plt

input = cv2.imread("cubos.png")
input = cv2.imread("TEXTOS.png")

hsv_image=cv2.cvtColor(input,cv2.COLOR_BGR2HSV)

B,G,R=cv2.split(input)

# font
font = cv2.FONT_HERSHEY_SIMPLEX
 
# POSICAO
org = (20, 50)
  
# fontScale
fontScale = 1
   
# Blue color in BGR
color = (255, 255, 255)
  
# Line thickness of 2 px
thickness = 2
   
# Using cv2.putText() method
image = cv2.putText(R, 'R', org, font, 
                   fontScale, (0,0,255), thickness, cv2.LINE_AA)

image = cv2.putText(G, 'G', org, font, 
                   fontScale, (0,255,0), thickness, cv2.LINE_AA)

image = cv2.putText(B, 'B', org, font, 
                   fontScale, (0,255,0), thickness, cv2.LINE_AA)

"""### A imagem original tem textos com cores puras, R,G e B, e os numeros apresentam imagens com valores de RGB na criação delas.
Veja que os textos que representam a abnda exibida não são apresentados, pois tem o valor 255 (branco).

"""

cv2.imshow("", input)
imagem=np.vstack((B,G,R))
cv2.imshow("", imagem)

"""Agora, a mesma coisa para HSV.
H determina a cor, 
S, se é uma cor pura ou misturada
V, se é escura ou clara.

"""

h=cv2.imread("MATIZ.png")
s=cv2.imread("saturação.png")
v=cv2.imread("brilho.png")
plt.figure(figsize = ((12, 6)))
plt.subplot(1, 3, 1)
plt.title("Matiz", fontsize = 16)
plt.imshow(h)
plt.subplot(1, 3, 2)
plt.title("Saturação", fontsize = 16)
#plt.suptitle("Gráficos", fontsize = 20)
plt.imshow(s)
plt.subplot(1, 3, 3)
plt.title("Brilho", fontsize = 16)
plt.imshow(v)
plt.show()

H,S,V=cv2.split(hsv_image)
# font
font = cv2.FONT_HERSHEY_SIMPLEX
# POSICAO
org = (20, 50)
# fontScale
fontScale = 1
# Blue color in BGR
color = (255, 255, 255)
# Line thickness of 2 px
thickness = 2
# Using cv2.putText() method
image = cv2.putText(H, 'H', org, font, 
                   fontScale, color, thickness, cv2.LINE_AA)
image = cv2.putText(S, 's', org, font, 
                   fontScale, color, thickness, cv2.LINE_AA)
image = cv2.putText(V, 'V', org, font, 
                   fontScale, (0,0,0), thickness, cv2.LINE_AA)

"""_______________________________________________________________
As cores puras tem S=240, e V=120, variando a matiz(H):
R=0,
G=80
B=160
_______________________________________________________________
"""

cv2.imshow("", input)
cv2.imshow("", hsv_image)
imagem=np.vstack((H,S,V))
cv2.imshow("", imagem)
#observe que na figura H, o bloco bermelho desapareceu, pois H=0 para a cor vermelha
#a sombra do texto vermelho se dá pelo serrilhado da imagem

lena=cv2.imread("lenna.png")

cv2.imshow("", lena)

print(np.max(np.max(V)))

#imagem original V
V=np.uint8(V)
#Histograma de V
V_hist = cv2.calcHist([V],[0],None,[256],[0,256])
# Equalizando V
V_equ = cv2.equalizeHist(V) 
V_equ=np.uint8(V_equ)
# Histograma equalizado
V_hist_equ = cv2.calcHist([V_equ],[0],None,[256],[0,256])



plt.figure(figsize = ((12, 6)))
plt.subplot(2, 2, 1)
plt.title("Banda V", fontsize = 16)
plt.imshow(V)

plt.subplot(2, 2, 2)
plt.title("Banda V Equalizada", fontsize = 16)
#plt.suptitle("Gráficos", fontsize = 20)
plt.imshow(V_equ)

plt.subplot(2, 2, 3)
plt.title("Histograma  Banda V", fontsize = 16)
plt.suptitle("Gráficos", fontsize = 20)
plt.plot(V_hist)

plt.subplot(2, 2, 4)
plt.title("Histograma Equalizado da Banda V", fontsize = 16)
plt.suptitle("Gráficos", fontsize = 20)
plt.plot(V_hist_equ)
plt.show()

#mostrando hsv equalizado e rgb equalizado a partir do hsv
hsv=cv2.merge([H,S,V_equ])
rgb=cv2.cvtColor(hsv,cv2.COLOR_HSV2BGR)
imagem=np.hstack((hsv,rgb))
cv2.imshow("", imagem)